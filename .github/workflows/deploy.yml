# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build and deploy

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: docker login
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

    - name: docker build
      run: |
        docker build . -t thetopichub913/the-topic:${{ github.run_id }}

    - name: check docker images
      run: |
        docker images

    - name: docker push
      run: |
        docker push thetopichub913/the-topic:${{ github.run_id }}

    - name: SSH Remote Commands
      uses: appleboy/ssh-action@v0.1.3
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER_NAME }}
        key: ${{ secrets.PRIVATE_KEY }}
        envs: DOCKER_USER,DOCKER_PASSWORD
        script: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

          # remove all unused images
          docker image prune -a -f

          docker pull thetopichub913/the-topic:${{ github.run_id }}

          # kill containers
          docker kill topic-client
          docker rm topic-client

          # start container:
          docker run -p 80:3001/tcp --name topic-client -d thetopichub913/the-topic:${{ github.run_id }}

          docker ps
    - name: Discord notification
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      uses: Ilshidur/action-discord@master
      with:
        args: 'The Topic Client has been deployed succesfully at $(date).'
